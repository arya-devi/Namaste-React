{"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA,GAEA,MAAM,SAAS,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IAC1D,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,uCAAuC;AACvC,UAAU;AACV,uBAAuB;AACvB,+BAA+B;AAC/B,KAAK;AACL,QAAQ,GAAG,CAAC,SAAS,sCAAsC;AAE3D,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AAEzD,KAAK,MAAM,CAAC,SAAS,+HAA+H","sources":["App.js"],"sourcesContent":["/*\r\n<div id=\"parent\">\r\n<div id=\"child1\">\r\n<h1>Hello world from React h1</h1>\r\n<h2>Hello world from React h2</h2>\r\n\r\n</div>\r\n<div id=\"child2\">\r\n<h1>Hello world from React h1</h1>\r\n<h2>Hello world from React h2</h2>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\nReact.createElement (object) => HTML(browser understand)\r\n\r\n*/\r\n\r\nconst parent = React.createElement(\"div\", { id: \"parent\" }, [\r\n  React.createElement(\"div\", { id: \"child1\" }, [\r\n    React.createElement(\"h1\", {}, \"Hello world from React h1\"),\r\n    React.createElement(\"h2\", {}, \"Hello world from React h2\"),\r\n  ]),\r\n  React.createElement(\"div\", { id: \"child2\" }, [\r\n    React.createElement(\"h1\", {}, \"Hello world from React h1\"),\r\n    React.createElement(\"h2\", {}, \"Hello world from React h2\"),\r\n  ]),\r\n]);\r\n\r\n// const heading = React.createElement(\r\n//   \"h1\",\r\n//   { id: \"heading\" },\r\n//   \"Hello world from React !\"\r\n// );\r\nconsole.log(parent); //this is an object not html tag yet !\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(parent); // The render method take the react element that is a javascript object and it convert that into browser understands tags(HTML)\r\n"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}